"""
Django settings for site_rencontre project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-k4n#!-$25bcf5mcyt8)r2y88vw@rosgg**)@x_^#gr*+&u95u0'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_HOST_USER = 'lovelimeet123@gmail.com'
# EMAIL_HOST_PASSWORD = "cxte wmme kffj aeup"
# EMAIL_PORT = 587


ALLOWED_HOSTS = ['marriedate.com','localhost','127.0.0.1']

EMAIL_BACKEND  = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_TLS = True






# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app_accueil',
    'app_membres',
    'app_messages',
    'App_activation_inscription',
    'channels',
    'cloudinary',
    'cloudinary_storage',
    'app_contact'
]


# DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'

# CLOUDINARY_STORAGE = {
#     'CLOUD_NAME': 'dqoesj5j4',
#     'API_KEY': '383266658697116',
#     'API_SECRET': 'GrJrIRN4iv444bSUPgGKAETwsKU',
# }


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'app_membres.middleware.activiter_middleware.UpdateLastActivityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.locale.LocaleMiddleware',
]

STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

ROOT_URLCONF = 'site_rencontre.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates/'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'app_accueil.context_processors.profil_image',
                'app_membres.context_processors.notifications_count',
                'app_membres.context_processors.messages_unread_senders_count',
            ],
        },
    },
]
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
}

SESSION_COOKIE_AGE = 1209600  # Durée en secondes (2 semaines par défaut)

WSGI_APPLICATION = 'site_rencontre.wsgi.application'
ASGI_APPLICATION = 'site_rencontre.asgi.application'
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels.layers.InMemoryChannelLayer"
    }
}


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'trhnvwvp_lovelimeet',
#         'USER': 'trhnvwvp_love',
#         'PASSWORD': 'Marieanais2020',
#         'HOST' : '127.0.0.1',
#         'PORT' : '5432',
#         'OPTIONS': {
#             'sslmode': 'disable',
#         },
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'fr'

TIME_ZONE = 'Indian/Antananarivo'  # ou 'Europe/Paris'

USE_I18N = True

USE_TZ = True

LANGUAGES = [
    ('fr', 'Français'),
    ('en', 'English'),
]
LOCALE_PATHS = [BASE_DIR / 'locale']


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

# ity no izy

# STATIC_URL = '/static/'
# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, 'static')
# ]

# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# BASE_DIR est le chemin vers la racine de votre projet Django (ex: lovelimeetapp)
# BASE_DIR = Path(__file__).resolve().parent.parent

# STATIC_URL = '/static/'

# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR , 'lovelimeetapp/static')
#      # Assurez-vous que ce chemin est correct pour vos fichiers sources
#     # Par exemple, si votre dossier statique projet est lovelimeetapp/static/, ce serait BASE_DIR / 'static'
#     # ou si c'est lovelimeetapp/votre_projet/static/, ce serait BASE_DIR / 'votre_projet' / 'static'
# ]

# --- C'EST ICI LA CORRECTION CRUCIALE ---
# STATIC_ROOT doit pointer vers le VRAI public_html/static/
# REMPLACEZ '/home/votre_nom_utilisateur/' par le chemin réel de votre dossier utilisateur

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

STATIC_ROOT = os.path.join(BASE_DIR, '..', 'public_html', 'static')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


import os
from dotenv import load_dotenv
load_dotenv()
STORAGE_IMAGE = os.getenv('STORAGE_IMAGE')



# MEDIA_URL = '/media/'
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
